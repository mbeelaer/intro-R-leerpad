{
  "hash": "ec0931110ce196ac51211b85c1133b75",
  "result": {
    "engine": "knitr",
    "markdown": "# Data importeren\n\nMoet het nog herhaald worden? Je zal in R heel vaak met data werken. Dat wist je natuurlijk al. Maar hoe kan je die data in RStudio inladen, zodat je ermee aan de slag kan? \n\nData zullen vaak opgeslagen zijn in een csv-bestand. Dat is een specifiek bestandstype dat heel geschikt is om onderzoeksdata te bevatten. In R bestaat een handige functie om zo'n csv-bestand in te laden: `read.csv()`. Met deze functie kan je data inladen...\n\n<ol>\n<li> ...vanop een locatie op je computer (ook \"lokaal\" genoemd)\n\n<li> ...vanop een locatie op het internet\n</ol>\n\n\\\n\nLaten we een voorbeeld van elk geval bekijken. Het is lichtjes verschillend voor Windows en Mac OS, dus kies in het overzicht links voor de juiste pagina of klik door via het pijltje rechts tot je op de juiste pagina landt.\n\\\n\n\n## Windows\n\n### Lokale data inladen\n\nIn deze situatie heb je een csv-bestand ergens op je computer opgeslagen. In een ideale wereld bevindt dit bestand zich in je working directory.\n\nTer herinnering, de working directory is een locatie op je computer die in verbinding staat met RStudio. Om te achterhalen wat op dit moment je working directory is gebruik je de functie `getwd()`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"C:/Gebruikers/michi/Documenten/Statistiek/Werken met R\"\n```\n\n\n:::\n:::\n\n\n\n\\\n\nAls zich in die map een csv-bestand bevindt, dan kan je het oproepen door simpelweg de naam van het bestand als argument te geven aan de functie `read.csv()`. Het is vaak een goed idee om dit bestand bij het inlezen meteen in een nieuw object te stoppen, hier `basketbal_dataframe` genaamd.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbasketbal_dataframe <- read.csv(\"basketbal.csv\")\n```\n:::\n\n\n\n\\\n\nInspecteer de eerste 6 rijen van het object dat je net hebt gemaakt.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(basketbal_dataframe)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  voornamen leeftijden rugnummers\n1     Laura         19          4\n2    Danira         22         12\n3  Stefanie         18          7\n4     Leyla         22         76\n5    Chelsy         24         33\n```\n\n\n:::\n:::\n\n\n\n\\\n\nAls het bestand dat je wil inlezen zich niet in je working directory bevindt, maar ergens anders op je computer, dan moet je de locatie^[Zorg ervoor dat je enkel / gebruikt in de maplocatie, geen \\\\.] meegeven als argument aan de functie `read.csv()`. Bijvoorbeeld:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndeelnemers_dataframe <- read.csv(\"C:/Users/mbeelaer/Documents/UGent/biostats.csv\")\n```\n:::\n\n\n\n\\\n\nBekijk opnieuw de eerste 6 rijen ter controle.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(deelnemers_dataframe) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Name      Sex Age Height..in. Weight..lbs.\n1 Alex        M  41          74          170\n2 Bert        M  42          68          166\n3 Carl        M  32          70          155\n4 Dave        M  39          72          167\n5 Elly        F  30          66          124\n6 Fran        F  33          66          115\n```\n\n\n:::\n:::\n\n\n\n\\\n\nDit werkt ook prima, maar het is wat omslachtiger, omdat je eerst de locatie van het bestand moet achterhalen en vervolgens tussen de haakjes van de functie `read.csv()` plakken.\n\n\\\n\n\n### Data van het internet inladen\n\nIemand heeft een csv-bestand gemaakt over de films waarin Robert De Niro meespeelt en heeft die data ter beschikking gesteld op het internet. Het bestand is te vinden op het volgende internetadres (ook \"url\" genoemd):\n\n<span class=\"filepath\">https://people.sc.fsu.edu/~jburkardt/data/csv/deniro.csv</span> \n\n\\\n\nDe data in dit bestand kan je rechtstreeks in RStudio inladen. Dit doe je door de url als argument aan de functie `read.csv()` te geven:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilm_data <- read.csv(\"https://people.sc.fsu.edu/~jburkardt/data/csv/deniro.csv\") \n```\n:::\n\n\n\n\\\n\nOm de data te inspecteren kan je de functies `head()` en `str()` gebruiken.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(film_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Year Score                 Title\n1 1968    86             Greetings\n2 1970    17           Bloody Mama\n3 1970    73              Hi, Mom!\n4 1971    40           Born to Win\n5 1973    98          Mean Streets\n6 1973    88  Bang the Drum Slowly\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(film_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t87 obs. of  3 variables:\n $ Year : int  1968 1970 1970 1971 1973 1973 1974 1976 1976 1977 ...\n $ Score: int  86 17 73 40 98 88 97 41 99 47 ...\n $ Title: chr  \" Greetings\" \" Bloody Mama\" \" Hi, Mom!\" \" Born to Win\" ...\n```\n\n\n:::\n:::\n\n\n\n\\\n\nDe data lijken goed ingeladen! Kan je achterhalen hoeveel films in de dataset zijn opgenomen?\n\n<details>\n<summary><span class=\"details-summary\">Klik hier om het antwoord te zien</span></summary>\n<div class=\"meerInfo\">\nEr zijn 87 \"observations\" van 3 variabelen in het dataframe. Dat wil zeggen dat jaartal, score en titel van 87 films werden bijgehouden.\n</div>\n</details>\n\n\\\n\n\n## macOS\n\n### Lokale data inladen\n\nIn deze situatie heb je een csv-bestand ergens op je computer opgeslagen. In het eenvoudigste geval bevindt dit bestand zich in je working directory.\n\nTer herinnering, de working directory is een locatie op je computer die in verbinding staat met RStudio. Om te achterhalen wat op dit moment je working directory is gebruik je de functie `getwd()`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"/Users/jouwnaam/Statistiek\"\n```\n\n\n:::\n:::\n\n\n\n\\\n\nAls zich in die map een csv-bestand bevindt, dan kan je het oproepen door simpelweg de naam van het bestand als argument te geven aan de functie `read.csv()`. Het is vaak een goed idee om dit bestand bij het inlezen meteen in een nieuw object te stoppen, hier `basketbal_dataframe` genaamd.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbasketbal_dataframe <- read.csv(\"basketbal.csv\")\n```\n:::\n\n\n\n\\\n\nInspecteer de eerste 6 rijen van het dataframe met de functie `head()`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(basketbal_dataframe)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  voornamen leeftijden rugnummers\n1     Laura         19          4\n2    Danira         22         12\n3  Stefanie         18          7\n4     Leyla         22         76\n5    Chelsy         24         33\n```\n\n\n:::\n:::\n\n\n\n\\\n\nAls het bestand dat je wil inlezen zich niet in je working directory bevindt, dan moet je de locatie^[Zorg ervoor dat je enkel / gebruikt in de maplocatie, geen \\\\.] meegeven als argument aan de functie `read.csv()`. Bijvoorbeeld:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndeelnemers_dataframe <- read.csv(\"/Users/jouwnaam/Documents/biostats.csv\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\\\n\nBekijk opnieuw de eerste 6 rijen ter controle.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(deelnemers_dataframe)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Name      Sex Age Height..in. Weight..lbs.\n1 Alex        M  41          74          170\n2 Bert        M  42          68          166\n3 Carl        M  32          70          155\n4 Dave        M  39          72          167\n5 Elly        F  30          66          124\n6 Fran        F  33          66          115\n```\n\n\n:::\n:::\n\n\n\n\\\n\nDit werkt ook prima, maar het is wat omslachtiger, omdat je eerst de locatie van het bestand moet achterhalen en vervolgens tussen de haakjes van de functie `read.csv()` plakken.\n\n\\\n\n\n### Data van het internet inladen\n\nIemand heeft een csv-bestand gemaakt over de films waarin Robert De Niro meespeelt en heeft die data ter beschikking gesteld op het internet. Het bestand is te vinden op het volgende internetadres (ook \"url\" genoemd):\n\n<span class=\"filepath\">https://people.sc.fsu.edu/~jburkardt/data/csv/deniro.csv</span>\n\n\\\n\nDeze data kan je rechtstreeks in RStudio inladen. Dit doe je door de url als argument aan de functie `read.csv()` te geven. Het is best om dit bestand meteen in een object te stoppen, hier `film_data` genoemd:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilm_data <- read.csv(\"https://people.sc.fsu.edu/~jburkardt/data/csv/deniro.csv\") \n```\n:::\n\n\n\n\\\n\nOm de data te inspecteren kan je de functies `head()` en `str()` gebruiken.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(film_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Year Score                 Title\n1 1968    86             Greetings\n2 1970    17           Bloody Mama\n3 1970    73              Hi, Mom!\n4 1971    40           Born to Win\n5 1973    98          Mean Streets\n6 1973    88  Bang the Drum Slowly\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(film_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t87 obs. of  3 variables:\n $ Year : int  1968 1970 1970 1971 1973 1973 1974 1976 1976 1977 ...\n $ Score: int  86 17 73 40 98 88 97 41 99 47 ...\n $ Title: chr  \" Greetings\" \" Bloody Mama\" \" Hi, Mom!\" \" Born to Win\" ...\n```\n\n\n:::\n:::\n\n\n\n\\\n\nDe data lijken goed ingeladen! Kan je achterhalen hoeveel films in de dataset zijn opgenomen?\n\n<details>\n<summary><span class=\"details-summary\">Klik hier om het antwoord te zien</span></summary>\n<div class=\"meerInfo\">\nEr zijn 87 \"observations\" van 3 variabelen in het dataframe. Dat wil zeggen dat jaartal, score en titel van 87 films werden bijgehouden.\n</div>\n</details>\n\n\\\n",
    "supporting": [
      "09-Data-importeren_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}